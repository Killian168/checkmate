org: killian168
service: checkmate
frameworkVersion: "4"

provider:
  name: aws
  region: ${opt:region, 'eu-west-1'}
  memorySize: 128
  architecture: arm64
  runtime: provided.al2023
  httpApi:
    cors: true
  iam:
    role:
      statements: # ToDo: Tighten this up
        - Effect: Allow
          Action:
            - "dynamodb:*"
            - "logs:*"
          Resource: "*"

package:
  individually: true

functions:
  api:
    name: ${self:service}-${sls:stage}-api
    handler: api
    package:
      artifact: target/lambda/api/api.zip
    events:
      - httpApi:
          path: /health
          method: GET
      - httpApi:
          path: /auth/user
          method: ANY
      - httpApi:
          path: /auth/login
          method: POST
      - httpApi:
          path: /matchmaking/join
          method: POST
      - httpApi:
          path: /matchmaking/leave
          method: POST
    reservedConcurrency: 10
    environment:
      USERS_TABLE: !Ref UsersTable
      MATCHMAKING_TABLE: !Ref MatchmakingTable
      JWT_SECRET: ThisIsMySecret

  matchmaking-processor:
    name: ${self:service}-${sls:stage}-matchmaking-processor
    handler: matchmaking-processor
    package:
      artifact: target/lambda/matchmaking-processor/matchmaking-processor.zip
    events:
      - stream:
          type: dynamodb
          arn: !GetAtt MatchmakingTable.StreamArn
          batchSize: 1
          startingPosition: LATEST
          filterPatterns:
            - eventName: [INSERT]
    environment:
      MATCHMAKING_TABLE: !Ref MatchmakingTable

resources:
  Resources:
    UsersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:service}-${sls:stage}-users
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
          - AttributeName: email
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        GlobalSecondaryIndexes:
          - IndexName: GSI_UserByEmail
            KeySchema:
              - AttributeName: email
                KeyType: HASH
            Projection:
              ProjectionType: ALL

    MatchmakingTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:service}-${sls:stage}-matchmaking
        BillingMode: PAY_PER_REQUEST
        StreamSpecification:
          StreamViewType: NEW_IMAGE
        AttributeDefinitions:
          - AttributeName: queue_rating
            AttributeType: S
          - AttributeName: player_id
            AttributeType: S
        KeySchema:
          - AttributeName: queue_rating
            KeyType: HASH
          - AttributeName: player_id
            KeyType: RANGE
