name: Code Coverage

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  CARGO_TERM_COLOR: always
  RUSTFLAGS: "-Cinstrument-coverage"
  LLVM_PROFILE_FILE: "checkmate-%p-%m.profraw"

jobs:
  coverage:
    name: Code Coverage
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Rust
      uses: actions-rust-lang/setup-rust-toolchain@v1
      with:
        toolchain: stable
        components: llvm-tools-preview

    - name: Cache cargo registry
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-

    - name: Install cargo-llvm-cov
      run: |
        cargo install cargo-llvm-cov

    - name: Generate coverage report
      run: |
        cargo llvm-cov --workspace --lcov --output-path lcov.info

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./lcov.info
        flags: unittests
        name: codecov-umbrella

    - name: Generate HTML report
      run: |
        cargo llvm-cov --workspace --html --output-dir target/coverage

    - name: Upload HTML report
      uses: actions/upload-artifact@v3
      with:
        name: coverage-report
        path: target/coverage/
        retention-days: 30

  coverage-summary:
    name: Coverage Summary
    runs-on: ubuntu-latest
    needs: coverage

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Rust
      uses: actions-rust-lang/setup-rust-toolchain@v1
      with:
        toolchain: stable
        components: llvm-tools-preview

    - name: Install cargo-llvm-cov
      run: |
        cargo install cargo-llvm-cov

    - name: Generate coverage summary
      run: |
        cargo llvm-cov --workspace --text

    - name: Check minimum coverage
      run: |
        COVERAGE=$(cargo llvm-cov --workspace --text | grep "Total.*" | tail -1 | awk '{print $6}' | sed 's/%//')
        MIN_COVERAGE=70
        echo "Current coverage: $COVERAGE%"
        echo "Minimum required: $MIN_COVERAGE%"
        if (( $(echo "$COVERAGE < $MIN_COVERAGE" | bc -l) )); then
          echo "❌ Coverage below minimum threshold"
          exit 1
        else
          echo "✅ Coverage meets minimum threshold"
        fi
      shell: bash
